/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analisadorlexico;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.*;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;



public class InterfaceAnalisador extends javax.swing.JFrame {
    static public MyAnalisadorLexico scanner;
    static JFileChooser file;
    BufferedReader in;
    /**
     * Creates new form InterfaceAnalisador
     */
    public InterfaceAnalisador() {
        initComponents();
        btnCarrega.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtCaminhoArquivo = new javax.swing.JTextField();
        btnArquivo = new javax.swing.JButton();
        btnCarrega = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCodigoCarregado = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOutputAnalisador = new javax.swing.JTextArea();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analisador Lexico");
        setIconImage(Toolkit.getDefaultToolkit().getImage("Pepe.png"));
        setMinimumSize(new java.awt.Dimension(500, 300));

        txtCaminhoArquivo.setText("Digite o caminho do arquivo");
        txtCaminhoArquivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCaminhoArquivoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCaminhoArquivoFocusLost(evt);
            }
        });
        txtCaminhoArquivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCaminhoArquivoKeyTyped(evt);
            }
        });

        btnArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPasta.gif"))); // NOI18N
        btnArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArquivoActionPerformed(evt);
            }
        });

        btnCarrega.setText("Carregar");
        btnCarrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregaActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Save-icon-ss.png"))); // NOI18N
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(txtCaminhoArquivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArquivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar)
                .addGap(9, 9, 9)
                .addComponent(btnCarrega, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnArquivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCaminhoArquivo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCarrega)))
                .addContainerGap())
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Codigo Escolhido"));

        txtCodigoCarregado.setColumns(20);
        txtCodigoCarregado.setRows(5);
        txtCodigoCarregado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoCarregadoKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtCodigoCarregado);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Analisador Lexico"));
        jScrollPane2.setToolTipText("");

        txtOutputAnalisador.setEditable(false);
        txtOutputAnalisador.setColumns(20);
        txtOutputAnalisador.setRows(5);
        jScrollPane2.setViewportView(txtOutputAnalisador);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void carregarArquivo(String caminhoArquivo){
        try{
            
        if(txtCaminhoArquivo.getText().contains(".txt")){
                in = new BufferedReader(new FileReader(caminhoArquivo));
            }else
                in = new BufferedReader(new FileReader(caminhoArquivo+".txt"));
            
                String str, txt = "";
                while((str = in.readLine()) != null){ 
                    txt += str+"\n";
                }
           txtCodigoCarregado.setText(txt);
        }catch (Exception e) {
            System.out.println("Erro ao carregar o arquivo.");
            JOptionPane.showMessageDialog(null, "ERRO","Erro ao carregar arquivo: " + e.toString(),0);
       }
    }
    
    private void btnArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArquivoActionPerformed
        try{
            file = new JFileChooser();
        file.setDialogTitle("Procurar arquivos");
        file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Arquivo txt", "txt");
        file.setFileFilter(filtro);
        
        int retorno = file.showOpenDialog(this);
        txtCaminhoArquivo.setText( file.getSelectedFile().getPath() );
        
        if(file.getSelectedFile().isFile()){
            btnCarrega.setEnabled(true);
        }
        
            carregarArquivo(txtCaminhoArquivo.getText());
        
        }catch(java.lang.NullPointerException e){
            System.err.println("Erro: arquivo foi escolhido");
        }catch(Exception e){
            System.err.println("Erro: "+e.toString());
        }
    }//GEN-LAST:event_btnArquivoActionPerformed

    private void btnCarregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregaActionPerformed
   
    MyAnalisadorSintatico parser;
        try{
            
           carregarArquivo(txtCaminhoArquivo.getText());
           txtOutputAnalisador.setText("");
            
            scanner = new MyAnalisadorLexico(txtCaminhoArquivo.getText());
            parser = new MyAnalisadorSintatico(txtCaminhoArquivo.getText());

            do {
                //scanner.s0();
                //txtOutputAnalisador.setText(txtOutputAnalisador.getText() + scanner.tokenReconhecido +" \t-> " + AnalisadorLexico.saida +"\n");
                
                parser.listaCom();
            }
            while(parser.tokenReconhecido != Constantes.Token.EOF); 
            txtOutputAnalisador.setText("Análise realizada com sucesso no arquivo " + parser.nomeArquivoEntrada);
            
            //txtOutputAnalisador.setText(txtOutputAnalisador.getText() + "\nAnálise lexica realizada com sucesso.");
        }
        catch(ErroLexico e) {
            txtOutputAnalisador.setText("Erro léxico:\n"+e.toString());
            txtOutputAnalisador.setText(txtOutputAnalisador.getText() + e.toString());
            JOptionPane.showMessageDialog(null, e.toString(),"ERRO LEXICO",0);
        }
        catch(ErroSintatico e) {
            txtOutputAnalisador.setText("Erro sintático:\n"+e.toString());
            //JOptionPane.showMessageDialog(null, e.toString(),"Erro sintático: "+e.toString(),0);
        }
        catch(RuntimeException e) {
            txtOutputAnalisador.setText("Erro:\n"+e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage(),"Erro sintático: "+e.toString(),0);
        }
        catch (Exception e) {
            System.out.println("Erro ao carregar o arquivo.");
            //JOptionPane.showMessageDialog(null, "ERRO","Erro ao carregar arquivo: " + e.toString(),0);
       }
    }//GEN-LAST:event_btnCarregaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
   FileWriter arq = null;
    
    try{
        if(txtCaminhoArquivo.getText().isEmpty() || txtCaminhoArquivo.getText().equals(("Digite o caminho do arquivo"))){
            //txtCaminhoArquivo.setText("Digite o caminho do arquivo");
            //throw new RuntimeException("Erro: Arquivo sem nome ");
            file = new JFileChooser();
            file.setDialogTitle("Procurar arquivos");
            file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Arquivo txt", "txt");
            file.setFileFilter(filtro);

            int retorno = file.showOpenDialog(this);
            txtCaminhoArquivo.setText( file.getSelectedFile().getPath() );
            
        }
        if(txtCaminhoArquivo.getText().contains(".txt")){
            arq = new FileWriter(txtCaminhoArquivo.getText());
        }else{
            arq = new FileWriter(txtCaminhoArquivo.getText()+".txt");
            txtCaminhoArquivo.setText(txtCaminhoArquivo.getText()+".txt");
        }
        
        PrintWriter gravarTxt = new PrintWriter(arq);
        //gravarTxt.printf("+--Resultado--+%n");
        gravarTxt.printf(txtCodigoCarregado.getText());
        btnCarrega.setEnabled(true);
        arq.close();
    }catch(Exception ex){
        System.err.println("erro: "+ ex.toString());
    }
    
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtCaminhoArquivoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCaminhoArquivoFocusGained
    if( txtCaminhoArquivo.getText().equals(("Digite o caminho do arquivo")) ){
        txtCaminhoArquivo.setText("");
    }
    }//GEN-LAST:event_txtCaminhoArquivoFocusGained

    private void txtCaminhoArquivoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCaminhoArquivoFocusLost
        if(txtCaminhoArquivo.getText().isEmpty()){
            txtCaminhoArquivo.setText("Digite o caminho do arquivo");
        }
    }//GEN-LAST:event_txtCaminhoArquivoFocusLost

    private void txtCodigoCarregadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoCarregadoKeyTyped
        if(401 == KeyEvent.KEY_PRESSED){
            btnCarrega.setEnabled(false);
        }
    }//GEN-LAST:event_txtCodigoCarregadoKeyTyped

    private void txtCaminhoArquivoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCaminhoArquivoKeyTyped
        if(401 == KeyEvent.KEY_PRESSED){
            btnCarrega.setEnabled(false);
        }
    }//GEN-LAST:event_txtCaminhoArquivoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceAnalisador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceAnalisador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceAnalisador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceAnalisador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InterfaceAnalisador n = new InterfaceAnalisador();
                n.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArquivo;
    private javax.swing.JButton btnCarrega;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCaminhoArquivo;
    private javax.swing.JTextArea txtCodigoCarregado;
    private javax.swing.JTextArea txtOutputAnalisador;
    // End of variables declaration//GEN-END:variables
}
